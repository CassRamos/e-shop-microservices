services:
  catalogdb:
    container_name: catalogdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=catalogdb
    restart: always
    ports: 
        - "5434:5432"
    volumes:
        - postgres_catalogdb:/var/lib/postgresql/data
  catalog.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=catalogdb;Port=5432;Database=catalogdb;User Id=postgres;Password=postgres
      - ASPNETCORE_Kestrel__Certificates__Default__Password=<YourPassword>
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    depends_on:
      - catalogdb
    ports:
      - "6000:8080"
      - "6060:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/https:ro 

      # 🔒 For HTTPS to work inside the container, you need to generate a local certificate
      # Run the following commands in the terminal before starting Docker Compose:
      # dotnet dev-certs https -ep %APPDATA%\ASP.NET\Https\aspnetapp.pfx -p <YourPassword>
      # dotnet dev-certs https --trust
      #
      # Replace <YourPassword> with your own password and make sure to set the same value in:
      # ASPNETCORE_Kestrel__Certificates__Default__Password=<YourPassword>

